% %% Import data for submit from text file.
% % Script for importing data from the following text file:
% %
% %    C:\Users\Public\Kaggle\2_Allstate_2016\dataset\test.csv
% %
% % To extend the code to different selected data or a different text file,
% % generate a function instead of a script.
% 
% % Auto-generated by MATLAB on 2016/11/12 13:59:09
% 
% tic 
% 
% %% Initialize variables.
% filename = 'G:\Judit\Kaggle\2_Allstate_2016\dataset\test.csv';
% delimiter = ',';
% startRow = 2;
% 
% %% Format for each line of text:
% %   column1: double (%f)
% %	column2: text (%s)
% %   column3: text (%s)
% %	column4: text (%s)
% %   column5: text (%s)
% %	column6: text (%s)
% %   column7: text (%s)
% %	column8: text (%s)
% %   column9: text (%s)
% %	column10: text (%s)
% %   column11: text (%s)
% %	column12: text (%s)
% %   column13: text (%s)
% %	column14: text (%s)
% %   column15: text (%s)
% %	column16: text (%s)
% %   column17: text (%s)
% %	column18: text (%s)
% %   column19: text (%s)
% %	column20: text (%s)
% %   column21: text (%s)
% %	column22: text (%s)
% %   column23: text (%s)
% %	column24: text (%s)
% %   column25: text (%s)
% %	column26: text (%s)
% %   column27: text (%s)
% %	column28: text (%s)
% %   column29: text (%s)
% %	column30: text (%s)
% %   column31: text (%s)
% %	column32: text (%s)
% %   column33: text (%s)
% %	column34: text (%s)
% %   column35: text (%s)
% %	column36: text (%s)
% %   column37: text (%s)
% %	column38: text (%s)
% %   column39: text (%s)
% %	column40: text (%s)
% %   column41: text (%s)
% %	column42: text (%s)
% %   column43: text (%s)
% %	column44: text (%s)
% %   column45: text (%s)
% %	column46: text (%s)
% %   column47: text (%s)
% %	column48: text (%s)
% %   column49: text (%s)
% %	column50: text (%s)
% %   column51: text (%s)
% %	column52: text (%s)
% %   column53: text (%s)
% %	column54: text (%s)
% %   column55: text (%s)
% %	column56: text (%s)
% %   column57: text (%s)
% %	column58: text (%s)
% %   column59: text (%s)
% %	column60: text (%s)
% %   column61: text (%s)
% %	column62: text (%s)
% %   column63: text (%s)
% %	column64: text (%s)
% %   column65: text (%s)
% %	column66: text (%s)
% %   column67: text (%s)
% %	column68: text (%s)
% %   column69: text (%s)
% %	column70: text (%s)
% %   column71: text (%s)
% %	column72: text (%s)
% %   column73: text (%s)
% %	column74: text (%s)
% %   column75: text (%s)
% %	column76: text (%s)
% %   column77: text (%s)
% %	column78: text (%s)
% %   column79: text (%s)
% %	column80: text (%s)
% %   column81: text (%s)
% %	column82: text (%s)
% %   column83: text (%s)
% %	column84: text (%s)
% %   column85: text (%s)
% %	column86: text (%s)
% %   column87: text (%s)
% %	column88: text (%s)
% %   column89: text (%s)
% %	column90: text (%s)
% %   column91: text (%s)
% %	column92: text (%s)
% %   column93: text (%s)
% %	column94: text (%s)
% %   column95: text (%s)
% %	column96: text (%s)
% %   column97: text (%s)
% %	column98: text (%s)
% %   column99: text (%s)
% %	column100: text (%s)
% %   column101: text (%s)
% %	column102: text (%s)
% %   column103: text (%s)
% %	column104: text (%s)
% %   column105: text (%s)
% %	column106: text (%s)
% %   column107: text (%s)
% %	column108: text (%s)
% %   column109: text (%s)
% %	column110: text (%s)
% %   column111: text (%s)
% %	column112: text (%s)
% %   column113: text (%s)
% %	column114: text (%s)
% %   column115: text (%s)
% %	column116: text (%s)
% %   column117: text (%s)
% %	column118: text (%s)
% %   column119: text (%s)
% %	column120: text (%s)
% %   column121: text (%s)
% %	column122: text (%s)
% %   column123: text (%s)
% %	column124: text (%s)
% %   column125: text (%s)
% %	column126: text (%s)
% %   column127: text (%s)
% %	column128: text (%s)
% %   column129: text (%s)
% %	column130: text (%s)
% %   column131: text (%s)
% % For more information, see the TEXTSCAN documentation.
% formatSpec = '%f%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';
% 
% %% Open the text file.
% fileID = fopen(filename,'r');
% 
% %% Read columns of data according to the format.
% % This call is based on the structure of the file used to generate this
% % code. If an error occurs for a different file, try regenerating the code
% % from the Import Tool.
% dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
% 
% %% Close the text file.
% fclose(fileID);
% 
% %% Post processing for unimportable data.
% % No unimportable data rules were applied during the import, so no post
% % processing code is included. To generate code which works for
% % unimportable data, select unimportable cells in a file and regenerate the
% % script.
% 
% %% Create output variable
% forsubmit_table = table(dataArray{1:end-1}, 'VariableNames', {'id','cat1','cat2','cat3','cat4','cat5','cat6','cat7','cat8','cat9','cat10','cat11','cat12','cat13','cat14','cat15','cat16','cat17','cat18','cat19','cat20','cat21','cat22','cat23','cat24','cat25','cat26','cat27','cat28','cat29','cat30','cat31','cat32','cat33','cat34','cat35','cat36','cat37','cat38','cat39','cat40','cat41','cat42','cat43','cat44','cat45','cat46','cat47','cat48','cat49','cat50','cat51','cat52','cat53','cat54','cat55','cat56','cat57','cat58','cat59','cat60','cat61','cat62','cat63','cat64','cat65','cat66','cat67','cat68','cat69','cat70','cat71','cat72','cat73','cat74','cat75','cat76','cat77','cat78','cat79','cat80','cat81','cat82','cat83','cat84','cat85','cat86','cat87','cat88','cat89','cat90','cat91','cat92','cat93','cat94','cat95','cat96','cat97','cat98','cat99','cat100','cat101','cat102','cat103','cat104','cat105','cat106','cat107','cat108','cat109','cat110','cat111','cat112','cat113','cat114','cat115','cat116','cont1','cont2','cont3','cont4','cont5','cont6','cont7','cont8','cont9','cont10','cont11','cont12','cont13','cont14'});
% 
% %% Clear temporary variables
% clearvars filename delimiter startRow formatSpec fileID dataArray ans;
% 
% %% Save variable as MAT-file version 7.3
% save('for_submit_table.mat', 'forsubmit_table', '-v7.3');
% 
% %% Create a numeric matrix to represent data
forsubmit_matrix = zeros(size(forsubmit_table));
forsubmit_matrix(:, 1) = forsubmit_table.(1);

load('dataset.mat', 'catToNumber');

% Categorical features: column 2 - column 117
for i = 2 : 117
    i
    forsubmit_table.(i) = categorical(forsubmit_table.(i));    
    forsubmit_matrix(:, i) = ConvertCategoricalToNumeric(forsubmit_table.(i), catToNumber{i, 1});
end;

% Numeric features + target value (loss): column 118 - column 132
for i = 118 : 131
    forsubmit_table.(i) = str2double(forsubmit_table.(i));
end;
forsubmit_matrix(:, 118:131) = table2array(forsubmit_table(:, 118 : 131));

save('for_submit.mat', 'forsubmit_matrix');

toc        % Elapsed time is 9165.722561 seconds. (Eszter, from line 181)